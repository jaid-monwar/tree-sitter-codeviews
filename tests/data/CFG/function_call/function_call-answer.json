{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "2_ using namespace std;", "type_label": "using", "id": 8}, {"label": "10_  int main()", "type_label": "function_definition", "id": 50}, {"label": "12_ int sum = add(5, 3);", "type_label": "expression_statement", "id": 56}, {"label": "13_ cout << \"5 + 3 = \" << sum << endl;", "type_label": "expression_statement", "id": 65}, {"label": "15_ greet(\"Alice\");", "type_label": "expression_statement", "id": 74}, {"label": "18_ int fact = factorial(5);", "type_label": "expression_statement", "id": 80}, {"label": "19_ cout << \"5! = \" << fact << endl;", "type_label": "expression_statement", "id": 88}, {"label": "22_ int a = 10, b = 20;", "type_label": "expression_statement", "id": 97}, {"label": "23_ cout << \"Before swap: a=\" << a << \", b=\" << b << endl;", "type_label": "expression_statement", "id": 105}, {"label": "24_ swapNumbers(a, b);", "type_label": "expression_statement", "id": 119}, {"label": "25_ cout << \"After swap: a=\" << a << \", b=\" << b << endl;", "type_label": "expression_statement", "id": 125}, {"label": "28_ int result = add(factorial(3), add(2, 4));", "type_label": "expression_statement", "id": 139}, {"label": "29_ cout << \"factorial(3) + add(2,4) = \" << result << endl;", "type_label": "expression_statement", "id": 155}, {"label": "31_ return 0;", "type_label": "return", "id": 164}, {"label": "35_  int add(int a, int b)", "type_label": "function_definition", "id": 166}, {"label": "36_ return a + b;", "type_label": "return", "id": 178}, {"label": "39_  void greet(string name)", "type_label": "function_definition", "id": 182}, {"label": "40_ cout << \"Hello, \" << name << \"!\" << endl;", "type_label": "expression_statement", "id": 191}, {"label": "43_  int factorial(int n)", "type_label": "function_definition", "id": 203}, {"label": "44_ if((n <= 1))", "type_label": "if", "id": 212}, {"label": "44_ return 1;", "type_label": "return", "id": 217}, {"label": "45_ return n * factorial(n - 1);", "type_label": "return", "id": 219}, {"label": "48_  void swapNumbers(int& x, int& y)", "type_label": "function_definition", "id": 228}, {"label": "49_ int temp = x;", "type_label": "expression_statement", "id": 242}, {"label": "50_ x = y;", "type_label": "expression_statement", "id": 247}, {"label": "51_ y = temp;", "type_label": "expression_statement", "id": 251}, {"label": "1_ start_node", "type_label": "start", "id": 1}, {"id": 255}, {"id": 256}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 50, "target": 56, "key": 0}, {"controlflow_type": "function_call|61", "edge_type": "CFG_edge", "label": "function_call|61", "color": "red", "source": 56, "target": 166, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 65, "target": 74, "key": 0}, {"controlflow_type": "function_call|85", "edge_type": "CFG_edge", "label": "function_call|85", "color": "red", "source": 80, "target": 203, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 88, "target": 97, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 97, "target": 105, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 105, "target": 119, "key": 0}, {"controlflow_type": "function_call|121", "edge_type": "CFG_edge", "label": "function_call|121", "color": "red", "source": 119, "target": 228, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 125, "target": 139, "key": 0}, {"controlflow_type": "function_call|151", "edge_type": "CFG_edge", "label": "function_call|151", "color": "red", "source": 139, "target": 166, "key": 0}, {"controlflow_type": "function_call|144", "edge_type": "CFG_edge", "label": "function_call|144", "color": "red", "source": 139, "target": 166, "key": 1}, {"controlflow_type": "function_call|147", "edge_type": "CFG_edge", "label": "function_call|147", "color": "red", "source": 139, "target": 203, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 155, "target": 164, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 166, "target": 178, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 178, "target": 65, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 178, "target": 155, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 182, "target": 191, "key": 0}, {"controlflow_type": "implicit_return", "edge_type": "CFG_edge", "label": "implicit_return", "color": "red", "source": 191, "target": 255, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 203, "target": 212, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 212, "target": 217, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 212, "target": 219, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 217, "target": 88, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 217, "target": 155, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 219, "target": 88, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 219, "target": 155, "key": 0}, {"controlflow_type": "function_call|223", "edge_type": "CFG_edge", "label": "function_call|223", "color": "red", "source": 219, "target": 203, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 228, "target": 242, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 242, "target": 247, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 247, "target": 251, "key": 0}, {"controlflow_type": "implicit_return", "edge_type": "CFG_edge", "label": "implicit_return", "color": "red", "source": 251, "target": 256, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 50, "key": 0}, {"controlflow_type": "function_return", "edge_type": "CFG_edge", "label": "function_return", "color": "red", "source": 256, "target": 125, "key": 0}]}